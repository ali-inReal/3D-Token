/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 ./assets/coin.glb
*/

import React, { useEffect, useRef } from 'react'
import { Text3D, useGLTF } from '@react-three/drei'
import model from "./assets/coin.glb"
import model1 from "./assets/coinGold.glb"
import lithos from "./assets/lithos.typeface.json"
import { CurveModifier } from '@react-three/drei'
import { CatmullRomCurve3 } from 'three'
import { FontLoader } from 'three/examples/jsm/loaders/FontLoader'
import png from "./assets/map.png"
import qr from "./assets/qr.png"
import { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry'
import { useTexture } from '@react-three/drei'
import { extend } from '@react-three/fiber'
import * as THREE from "three"
import f from "three/examples/fonts/helvetiker_bold.typeface.json"
extend({ TextGeometry })



export function Coin({ goodFor = "Good For 1" }) {
  const group = useRef()
  // useFrame(
  //   (state,delta)=>{
  //         group.current.rotation.y+=delta/3
  //   }

  // )

  const radius = 1.5
  const curve = React.useMemo(() => {
    const points = [];
    const segments = 64;
    for (let i = 0; i <= segments; i++) {
      const angle = (i / segments) * (Math.PI *2);
      const x = Math.cos(angle) * radius;
      const y = Math.sin(angle) * radius;
      points.push(new THREE.Vector3(x, y, 0));
    }
    return new CatmullRomCurve3(points);
  }, [radius]);
  const textRef1 = useRef()
  useEffect(
    () => {
      group.current.rotation.y = Math.PI
    }, []
  )
  const image = useTexture(png)
  const qrcode = useTexture(qr);
  const font = new FontLoader().parse(f)

  const { nodes, materials } = useGLTF(model1)


  console.log(nodes.backBottom.geometry)



  return (
    <group ref={group} dispose={null}>
      <pointLight intensity={2} decay={2} position={[3.01, 2.55, 2.5]} rotation={[-1.5, -0.07, 0.02]} />
      <pointLight intensity={2} decay={2} position={[-2.85, 2.55, 2.5]} rotation={[-1.5, -0.07, 0.02]} />
      <pointLight intensity={2} decay={2} position={[3.01, -2.74, 2.5]} rotation={[-1.5, -0.07, 0.02]} />
      <pointLight intensity={2} decay={2} position={[-2.85, -2.74, 2.5]} rotation={[-1.5, -0.07, 0.02]} />
      <pointLight intensity={2} decay={2} position={[3.01, 2.55, -1.78]} rotation={[-1.5, -0.07, 0.02]} />
      <pointLight intensity={2} decay={2} position={[-2.85, 2.55, -1.78]} rotation={[-1.5, -0.07, 0.02]} />
      <pointLight intensity={2} decay={2} position={[3.01, -2.74, -1.78]} rotation={[-1.5, -0.07, 0.02]} />
      <pointLight intensity={2} decay={2} position={[-2.85, -2.74, -1.78]} rotation={[-1.5, -0.07, 0.02]} />
      <lineSegments geometry={nodes.NurbsCircle.geometry} material={materials['default']} position={[2.31, 0.58, 0.03]} scale={0.02} />
      <mesh geometry={nodes.outerMostRing.geometry} material-color={0x8C6F18} material={materials.silver} rotation={[Math.PI / 2, 0, 0]} scale={1.98} />
      <mesh geometry={nodes.Circle001.geometry} material-color={0x36403A} material={materials.black} position={[0, 0, -0.1]} rotation={[Math.PI / 2, 0, 0]} scale={1.89} />
      <mesh geometry={nodes.innerMostRing.geometry} material={materials.silver} position={[0, 0, -0.04]} rotation={[Math.PI / 2, 0, 0]} scale={[0.97, 0.47, 0.97]} />
      <mesh geometry={nodes.middleRing.geometry} material={materials.silver} position={[0, 0, -0.03]} rotation={[Math.PI / 2, 0, 0]} scale={[1.35, 0.65, 1.35]} />
      <mesh geometry={nodes.Circle002.geometry} material={materials.silver} position={[0, 0, -0.09]} rotation={[Math.PI / 2, 0, 0]} scale={1.65} />
      <mesh geometry={nodes.Plane.geometry} material={materials.silver} position={[0, 0, -0.06]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Circle003.geometry} material={materials.silver} position={[0, 0, -0.1]} rotation={[Math.PI / 2, 0, Math.PI]} scale={1.65} />
      <mesh geometry={nodes.Sphere.geometry} material={materials.silver} position={[-1.76, 0, -0.08]} rotation={[Math.PI / 2, 0, 0]} scale={0.04} />
      <mesh geometry={nodes.Circle004.geometry} material-color={0x675319} material={materials.gold} position={[0, 0, -0.1]} rotation={[Math.PI / 2, 0, 0]} scale={1.89} />
      <mesh geometry={nodes.Circle004.geometry} position={[0, 0, -0.1]} rotation={[Math.PI / 2, 0, 0]} scale={1.89} >
        <meshStandardMaterial map={image} transparent={true} />
      </mesh>
      <mesh geometry={nodes.Circle004.geometry} position={[0, 0, -0.02]} rotation={[-Math.PI / 2, 0, 0]} scale={1.89} >
        <meshStandardMaterial map={image} transparent={true} />
      </mesh>
      <mesh geometry={nodes.frontTop.geometry} material={materials.silver} position={[0, 1.37, 0.75]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.frontMiddleTop.geometry} material={materials.silver} position={[0, 1.02, 0.75]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.frontMiddleBottom.geometry} material={materials.silver} position={[0, -0.93, 0.75]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.Plane001.geometry} material={materials.silver} position={[0, 0, -0.17]} rotation={[Math.PI / 2, 0, Math.PI]} scale={0.27} />
      <CurveModifier curve={curve} position={[0, 0, 0]} rotation={[0, 0, 0]} >
        <group rotation={[Math.PI/2+0.63,-Math.PI/2, Math.PI]}  >
          <mesh material={materials.silver} ref={textRef1}    >
            <textGeometry args={[goodFor, { font, size: 0.15, curveSegments: 100, height: 0.03, bevelThickness: 0.015, bevelSize: 0.003, bevelEnabled: true }]} />
          </mesh>
        </group>
      </CurveModifier>

      <mesh geometry={nodes.qr.geometry} position={[0, 0, -0.12]} rotation={[Math.PI / 2, 0, 0]} scale={0.33} >
        <meshStandardMaterial map={qrcode} color={"black"} transparent={true} />
      </mesh>
      <mesh geometry={nodes.frontBottom.geometry} material={materials.silver} position={[0, -1.76, -0.09]} rotation={[Math.PI / 2, 0, 0]} />
      <mesh geometry={nodes.rightScan.geometry} material={materials.silver} position={[0, 1.76, -0.03]} rotation={[Math.PI / 2, 0, Math.PI]} />
      <mesh geometry={nodes.leftScan.geometry} material={materials.silver} position={[0, 1.76, -0.03]} rotation={[Math.PI / 2, 0, Math.PI]} />
      <mesh geometry={nodes.backInnerTop.geometry} material={materials.silver} position={[0, 1.76, -0.03]} rotation={[Math.PI / 2, 0, Math.PI]} />
      <mesh geometry={nodes.backTop.geometry} material={materials.silver} position={[0, 1.76, -0.03]} rotation={[Math.PI / 2, 0, Math.PI]} />
      <mesh geometry={nodes.backInnerBottom.geometry} material={materials.silver} position={[0, 1.76, -0.03]} rotation={[Math.PI / 2, 0, Math.PI]} />
      <mesh geometry={nodes.frontYear.geometry} material={materials.silver} position={[0.28, -0.54, -0.09]} rotation={[Math.PI / 2, 0.49, 0]} scale={0.2} />
    </group>
  )
}

useGLTF.preload(model1)
